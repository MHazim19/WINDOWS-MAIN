name: Stop RDP Sessions

on:
  workflow_dispatch:
    inputs:
      target_range:
        description: 'Hentikan repo mana? (Contoh: "5", "1-3,8", atau "ALL")'
        required: true
        default: 'ALL'

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          input="${{ github.event.inputs.target_range }}"
          repos=""
          if [[ "$input" == "ALL" ]]; then input="1-20"; fi
          IFS=',' read -ra RANGES <<< "$input"; for range in "${RANGES[@]}"; do
            if [[ "$range" == *-* ]]; then
              start=$(echo "$range" | cut -d'-' -f1); end=$(echo "$range" | cut -d'-' -f2)
              for i in $(seq "$start" "$end"); do repos="$repos,\"WINDOWS$i\""; done
            else
              repos="$repos,\"WINDOWS$range\""
            fi
          done
          repos=$(echo "$repos" | sed 's/^,//'); echo "matrix={\"repo\":[$repos]}" >> $GITHUB_OUTPUT

  cancel-and-verify-session:
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}

    steps:
      - name: Find, Cancel, and Verify Workflow
        id: cancel_run
        env:
          GH_TOKEN: ${{ secrets.ACTION_PAT }}
        run: |
          echo "### 1. Searching for active workflow..."
          RUN_ID=$(gh run list --repo "${{ secrets.USERNAME_GH }}/${{ matrix.repo }}" --workflow main.yml --limit 5 --json databaseId,status --jq '.[] | select(.status=="in_progress" or .status=="queued") | .databaseId' | head -n 1)
          if [[ -z "$RUN_ID" ]]; then
            echo "RESULT: No running session found."
            echo "status=not_found" >> $GITHUB_OUTPUT; exit 0
          fi
          sleep 2
          echo "### 2. Found Run ID: $RUN_ID. Viewing details..."
          gh run view "$RUN_ID" --repo "${{ secrets.USERNAME_GH }}/${{ matrix.repo }}"
          sleep 2
          echo "### 3. Attempting to cancel Run ID: $RUN_ID..."
          gh run cancel "$RUN_ID" --repo "${{ secrets.USERNAME_GH }}/${{ matrix.repo }}"
          sleep 5
          echo "### 4. Verifying status..."
          FINAL_STATUS=$(gh run view "$RUN_ID" --repo "${{ secrets.USERNAME_GH }}/${{ matrix.repo }}" --json status -q '.status')
          echo "Final status of Run ID $RUN_ID is: $FINAL_STATUS"
          if [[ "$FINAL_STATUS" == "cancelled" ]]; then
            echo "status=cancelled" >> $GITHUB_OUTPUT
          else
            echo "status=failed_to_cancel" >> $GITHUB_OUTPUT
          fi
          
      - name: Send Stop Confirmation to Telegram
        run: |
          STATUS="${{ steps.cancel_run.outputs.status }}"
          if [[ "$STATUS" == "cancelled" ]]; then message="‚úÖ Sesi RDP untuk *${{ matrix.repo }}* berhasil diverifikasi berhenti.";
          elif [[ "$STATUS" == "failed_to_cancel" ]]; then message="‚ùå GAGAL! Perintah stop dijalankan tapi workflow *${{ matrix.repo }}* tidak berhenti.";
          else message="üü° Tidak ada sesi RDP aktif yang ditemukan untuk *${{ matrix.repo }}*."; fi
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" -d text="$message" -d parse_mode="Markdown"
